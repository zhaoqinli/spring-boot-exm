<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.boot</groupId>
	<artifactId>exm</artifactId>
	<!-- <packaging>war</packaging> -->
	<version>0.0.1-SNAPSHOT</version>
	
	<!-- Inherit defaults from Spring Boot -->
	<!-- 继承 spring-boot-starter-parent -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
	</parent>
	
	<!-- 配置属性参数值 -->
	<properties>
		<!-- 如果不想使用Spring Boot中的默认版本，可以在<properties>覆盖相应的版本，如，想使用不同版本的Spring Data -->
		<spring-data-releasetrain.version>Fowler-SR2</spring-data-releasetrain.version>
		<!--  使用 java 1.8  -->
		<!-- <java.version>1.8</java.version> -->
	</properties>
	
	<!-- 不继承 spring-boot-starter-parent -->
	<dependencyManagement>
	     <dependencies>
	     	<!-- Override Spring Data release train provided by Spring Boot -->
	        <!-- <dependency>
	            <groupId>org.springframework.data</groupId>
	            <artifactId>spring-data-releasetrain</artifactId>
	            <version>Fowler-SR2</version>
	            <scope>import</scope>
	            <type>pom</type>
	        </dependency> -->
	    	<!--  注意，scope是 import 。而且，这种情况下，不再允许在<properties>覆盖相应的版本。如果要使用其他版本，需要在上面的前面添加一个完整的dependency -->
	            <!-- Import dependency management from Spring Boot -->
	       <!--  <dependency>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-dependencies</artifactId>
	            <version>1.4.0.RELEASE</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency> -->
	    </dependencies>
	</dependencyManagement>
	
	
	<!-- spring-boot的web启动的jar包 -->
	<dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

    	<!--jpa的jar包 ，操作数据库的，类似hibernate-->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency> -->
        
        <!--mysql驱动-->
        <!-- <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency> -->
        <!--thymeleaf模板jar，是很不错的html数据传递取值，类似jsp的jstl-->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency> -->
        <!--热加载需要-->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <optional>true</optional>
	    </dependency>
	</dependencies>
	<build>
		<finalName>exm</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				 <configuration>
				 	<source>1.8</source>
	            	<target>1.8</target>
				 	<!--热加载需要-->
	                <fork>true</fork>
	            </configuration>
			</plugin>
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin> -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin> -->
		</plugins>
		<!-- 配置java版本 不配置的话默认父类配置的是1.6-->
	    <pluginManagement>
	      <plugins>
	        <plugin>
	          <artifactId>maven-compiler-plugin</artifactId>
	          <configuration>
	            <source>1.8</source>
	            <target>1.8</target>
	          </configuration>
	        </plugin>
	      </plugins>
	    </pluginManagement>
	</build>
</project>
